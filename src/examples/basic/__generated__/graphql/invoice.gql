schema {
  query: Query
  mutation: Mutation
}

"Create an invoice for a customer"
input CreateInvoiceInput {
  "Free text representing details on the invoice."
  details: String!
  "ID referring to the payment this invoice is related to."
  forPayment: String!
}

"Get an invoice by its ID"
input GetInvoiceByIdInput {
  "Lookup an invoice by ID."
  id: ID!
}

"A customer-facing invoice which is produced as a consequence of a payment."
type Invoice implements Identifiable {
  "The ID - this should be a unique string, or a structured ID (to be defined)."
  id: ID!
  "Free text representing details on the invoice."
  details: String!
  "Payment this invoice is related to."
  forPayment: Payment!
}

"A customer-facing invoice group, containing a batch of invoices, typically representing a group of purchases."
type InvoiceGroup implements Identifiable {
  "The ID - this should be a unique string, or a structured ID (to be defined)."
  id: ID!
  "List of invoices associated with this group."
  invoices: Invoice!
}

type Mutation {
  createInvoice(input: CreateInvoiceInput!): Invoice
}

type Query {
  getInvoiceById(input: GetInvoiceByIdInput!): Invoice
}
